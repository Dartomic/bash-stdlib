#!/bin/bash
# launch-emacsclient launches an emacs client, optionally restarting
# the daemon with many options for frames and protocols and all that.
#
# Copyright (C) 2015-2017, Andrew Kroshko, all rights reserved.
#
# Author: Andrew Kroshko
# Maintainer: Andrew Kroshko <akroshko.public+devel@gmail.com>
# Created: Sun Sep 20, 2015
# Version: 20171029
# URL: https://github.com/akroshko/bash-stdlib
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see http://www.gnu.org/licenses/.

# check if the Emacs server is running, if not start the server
# see http://www.emacswiki.org/emacs/EmacsClient

# TODO: can remove some redundancy
firstarg=$1
# start emacs deamon if not already started
if ! ps -ef | grep "emacs --daemon" | grep -v grep >/dev/null; then
    emacs --daemon --no-init-file --load ~/emacs-daemon.el
    sleep 10
fi
# get emacsclient command based on nice value
if [[ $(ulimit -e) -gt "29" ]]; then
    EMACSCLIENT="nice --adjustment=-10 emacsclient"
else
    EMACSCLIENT="emacsclient"
fi
case $firstarg in
    batch )
        shift
        ;;
    capture )
        shift
        # check if the server is running, if not start the server
        if ! ps -ef | grep "emacs --daemon" | grep -v grep >/dev/null; then
            $EMACSCLIENT --alternate-editor="" --create-frame --eval "(make-frame '((name . \"capture\") (top . 40) (left . 40) (width . 200) (height . 60)))" --eval "(select-frame-by-name \"capture\")" "$@"
        else
            # TODO: why does this seem to be creating a frame anyways?
            exec $EMACSCLIENT --alternate-editor=""                --eval "(make-frame '((name . \"capture\") (top . 40) (left . 40) (width . 200) (height . 60)))" --eval "(select-frame-by-name \"capture\")" "$@"
        fi
        ;;
    # similar to capture but with different name, decide have "maximized" as frame name, decide if I really want to do this or if it's useful
    maximized )
        shift
        # check if the server is running, if not start the server
        if ! ps -ef | grep "emacs --daemon" | grep -v grep >/dev/null; then
            exec $EMACSCLIENT --alternate-editor="" --create-frame --eval "(make-frame '((name . \"maximized\") (top . 40) (left . 40) (width . 200) (height . 60)))" --eval "(select-frame-by-name \"maximized\")" "$@"
        else
            # TODO: why does this seem to be creating a frame anyways?
            exec $EMACSCLIENT --alternate-editor=""                --eval "(make-frame '((name . \"maximized\") (top . 40) (left . 40) (width . 200) (height . 60)))" --eval "(select-frame-by-name \"maximized\")" "$@"
        fi
        ;;
    noframe )
        shift
        if ! ps -ef | grep "emacs --daemon" | grep -v grep >/dev/null; then
            $EMACSCLIENT --alternate-editor="" -c "$@"
        else
            emacsclient --no-wait --eval "(if (> (length (frame-list)) 1) 't)" | grep t
            if [[ $? = "1" ]]; then
                exec $EMACSCLIENT --create-frame --no-wait --alternate-editor="" "$@"
            else
                # TODO: why does this seem to be creating a frame anyways?
                exec $EMACSCLIENT                --no-wait --alternate-editor="" "$@"
            fi
        fi
        ;;
    protocol )
        shift
        if ! ps -ef | grep "emacs --daemon" | grep -v grep >/dev/null; then
            $EMACSCLIENT --create-frame --no-wait --alternate-editor="" -c "$@"
        else
            emacsclient --no-wait --eval "(if (> (length (frame-list)) 1) 't)" | grep t
            if [[ $? = "1" ]]; then
                exec $EMACSCLIENT --create-frame --no-wait --alternate-editor="" "$@"
            else
                # TODO: why does this seem to be creating a frame anyways?
                exec $EMACSCLIENT                --no-wait --alternate-editor="" "$@"
            fi
        fi
        ;;
    nohup )
        shift
        # TODO: should nohup use exec?
        nohup $EMACSCLIENT --alternate-editor="" --create-frame "$@" 2>&1 >/dev/null &
        ;;
    sameframe )
        shift
        exec $EMACSCLIENT --alternate-editor="" "$@"
        ;;
    * )
        exec $EMACSCLIENT --alternate-editor="" --create-frame "$@"
        ;;
esac
# TODO: might want to make sure these work without server?
# TODO do I want to make zile, mg, or another terminal Emacs version the EDITOR?
# TODO possibly check display variable?
export EDITOR="launch-emacsclient -nw"
export ALTERNATE_EDITOR="launch-emacsclient -nw"
export VISUAL="launch-emacsclient -nw"
