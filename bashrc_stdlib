#!/bin/bash
# bashrc_stdlib is a bashrc file reflecting my specific settings
#
# Copyright (C) 2015-2016, Andrew Kroshko, all rights reserved.
#
# Author: Andrew Kroshko
# Maintainer: Andrew Kroshko <akroshko.public+devel@gmail.com>
# Created: Fri Mar 27, 2015
# Version: 20160716
# URL: https://github.com/akroshko/bash-stdlib
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see http://www.gnu.org/licenses/.
# create a really nice prompt for most terminals

################################################################################
## set interesting things for bashrc, should these be here or a seperate file?
# XXXX: is it likely this may clobber other things in the namespace?
# Reset
Color_Off='\033[0m'       # Text Reset
# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White
# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White
# Underline
UBlack='\e[4;30m'       # Black
URed='\e[4;31m'         # Red
UGreen='\e[4;32m'       # Green
UYellow='\e[4;33m'      # Yellow
UBlue='\e[4;34m'        # Blue
UPurple='\e[4;35m'      # Purple
UCyan='\e[4;36m'        # Cyan
UWhite='\e[4;37m'       # White
# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White
# High Intensity
IBlack='\e[0;90m'       # Black
IRed='\e[0;91m'         # Red
IGreen='\e[0;92m'       # Green
IYellow='\e[0;93m'      # Yellow
IBlue='\e[0;94m'        # Blue
IPurple='\e[0;95m'      # Purple
ICyan='\e[0;96m'        # Cyan
IWhite='\e[0;97m'       # White
# Bold High Intensity
BIBlack='\e[1;90m'      # Black
BIRed='\e[1;91m'        # Red
BIGreen='\e[1;92m'      # Green
BIYellow='\e[1;93m'     # Yellow
BIBlue='\e[1;94m'       # Blue
BIPurple='\e[1;95m'     # Purple
BICyan='\e[1;96m'       # Cyan
BIWhite='\e[1;97m'      # White
# High Intensity backgrounds
On_IBlack='\e[0;100m'   # Black
On_IRed='\e[0;101m'     # Red
On_IGreen='\e[0;102m'   # Green
On_IYellow='\e[0;103m'  # Yellow
On_IBlue='\e[0;104m'    # Blue
On_IPurple='\e[10;95m'  # Purple
On_ICyan='\e[0;106m'    # Cyan
On_IWhite='\e[0;107m'   # White

case "$TERM" in
    "dumb")
        PS1="> "
        ;;
    linux|xterm*|rxvt*|eterm*|screen*)
        if [ $(id -u) -eq 0 ];
        then
            export PS1="\[${BPurple}\]\H $(if [[ -n $SSH_CLIENT && $TERM == screen ]];then echo -n '(ssh,screen) ';elif [[ -n $SSH_CLIENT ]];then echo -n '(ssh) ';elif [[ $TERM == screen ]];then echo -n '(screen) ';fi)\[${Purple}\]\j \[${BBLue}\]\w
\[${Yellow}\][\!] \`exitstatus=\$?;if [[ exitstatus -eq 0 ]];then echo \[\033[32m\]\${exitstatus}\[\e[0m\];else echo \[\033[31m\]\${exitstatus}\[\e[0m\]; fi\` \[${Cyan}\]\t \[${Green}\]\u \[${BRed}\]"'\$'"\[${Color_Off}\] "
        else
            export PS1="\[${BPurple}\]\H $(if [[ -n $SSH_CLIENT && $TERM == screen ]];then echo -n '(ssh,screen) ';elif [[ -n $SSH_CLIENT ]];then echo -n '(ssh) ';elif [[ $TERM == screen ]];then echo -n '(screen) ';fi)\[${Purple}\]\j \[${BBLue}\]\w
\[${Yellow}\][\!] \`exitstatus=\$?;if [[ exitstatus -eq 0 ]];then echo \[\033[32m\]\${exitstatus}\[\e[0m\];else echo \[\033[31m\]\${exitstatus}\[\e[0m\]; fi\` \[${Cyan}\]\t \[${Green}\]\u \[${BGreen}\]\$\[${Color_Off}\] "
        fi
        ;;
    *)
        PS1="> "
esac

# XXXX: only do prompt command in appropriate terminals
# TODO: enhance the terminals it works for including eterm
#       do I want to do this with screen
if [[ "$TERM" =~ xterm*|rxvt* ]]
then
    # export PROMPT_COMMAND='history -a; history -n;echo -ne "\033]0;${USER}@${HOSTNAME}:${PWD}\007"'
    # XXXX: username is unnecessary for my purposes
    local SHORTPWD=$(echo "$PWD" | sed -r 's|'"${HOME}"'|~|g')
    export PROMPT_COMMAND='history -a; history -n;echo -ne "\033]0;${HOSTNAME}:${SHORTPWD}\007"'
    # see http://askubuntu.com/questions/126737/make-gnome-terminal-show-the-command-running-as-title
    show_command_in_title_bar()
    {
        local SHORTPWD=$(echo "$PWD" | sed -r 's|'"${HOME}"'|~|g')
        case "$BASH_COMMAND" in
            *"\033]0"*)
                # The command is trying to set the title bar as well;
                # this is most likely the execution of $PROMPT_COMMAND.
                # In any case nested escapes confuse the terminal, so don't
                # output them.
                ;;
            *)
                # echo -ne "\033]0;${BASH_COMMAND}: ${USER}@${HOSTNAME}\007"
                # XXXX: user is unnecessary for my purposes
                echo -ne "\033]0;${BASH_COMMAND}: ${HOSTNAME}\007"
                ;;
        esac
    }
    trap show_command_in_title_bar DEBUG
    # XXXX: is there ever a nicer way to do this?
else
    export PROMPT_COMMAND='history -a; history -n'
fi

# Write, then reread the history file with each command
export HISTCONTROL=ignoreboth
export HISTSIZE=4096
export HISTFILESIZE=65536
shopt -s autocd extglob histappend
# stop too convenient exiting
export IGNOREEOF=1
shopt -s expand_aliases
force_color_prompt=yes
# aliases, generally spice up some already existing commands
alias bash-debug='set -xv'
alias bash-nodebug='set +xv'
alias agu='sudo apt-get update && sudo apt-get upgrade'
alias ag-autoremove='sudo apt-get autoremove'
alias al='alias'
alias dc='aafire -driver curses -extended'
alias df='df -h'
alias df-all='df -aTh'
alias du='du -h'
alias f90=gfortran
alias gccr='gcc-compile-run'
alias gi='grep --color -i'
alias gpg='gpg2'
alias grep='grep --color'
alias g-functions="grep-functions"
alias gf="grep-functions"
alias hrc='harm-bashrc'
alias f='feh-open-browse'
alias fm='feh-montage --montage'
alias fp='feh-montage --montage'
alias ft='feh-thumbnail'
# TODO: this could cause issues
alias less='less -R'
alias ls='ls -hF --color'
alias lsa='ls -la'
alias lsl='ls -l'
alias lst='ls -ltr'
alias mv='mv --no-clobber'
alias na='nautilus .'
alias netstat-pid='sudo netstat -nlpt'
alias pc='cmatrix'
alias pd='pushd .'
alias pdw='fortune | cowsay'
alias phoronix-test-suite='time phoronix-test-suite'
# need a fun way to complete aliases
alias scd='screen -d'
alias scl='screen -ls'
alias scr='screen -dr'
alias scs='screen-select'
alias scw='screen -wipe'
# fallback ssh
alias scp-fallback='scp -o "BatchMode no" -o "ChallengeResponseAuthentication yes" -o "PasswordAuthentication yes"'
alias ssh-fallback='ssh -o "BatchMode no" -o "ChallengeResponseAuthentication yes" -o "PasswordAuthentication yes"'
alias spy='sage -python'
# TODO: change this later?
